pragma solidity >=0.4.22 <0.6.0;

contract LogisticRegressionParameters {
   
    uint8[] public classes;
    int256[] public intercept;
    int256[] public coefficients;

    uint256 public C_value;
    string public solver_value;
    
    address service_provider;
    address client;
    
    bool client_payment_ok;


    //contract constructor
    constructor() public { 
        client_payment_ok = false;
    }
 

    // function to set the caller 0:service provider; 1:client
    function SetCaller(uint8 caller) public {
        if (caller == 0) {
            service_provider = msg.sender;
        }
        else {
            client = msg.sender;
            client_payment_ok = false;
        }
    }

    // function for the service provider to set the C and solver parameters
    function SetLRParams(uint256 c, string memory solv) public {
        require (msg.sender == service_provider);
        C_value = c;
        solver_value = solv;
    }

    // function to retrieve the C and solver parameters
    function GetLRParams() public returns (uint256,string memory) {
        return (C_value,solver_value);
    }

    // function for the service provider to set the classes array
    function SetClasses(uint8[] _classArray) public {
        require (msg.sender == service_provider);
        classes.length = _classArray.length;
        classes = _classArray;
    }
 
    // function to retreive the logistic regression classes array
    function GetClasses() public returns(uint8[] memory _outArray) {
        _outArray = classes;
    }
 
    // function for the service provider to set the intercept array 
    function SetIntercept(int256[] _intercptArray) public {
        require (msg.sender == service_provider);
        intercept.length = _intercptArray.length;
        intercept = _intercptArray;
    }

    // function to retrieve the logistic regression intercept array
    function GetIntercept() public returns(int256[] memory _outArray) {
        _outArray = intercept;
    }

    // function for the service provider to set the model coefficients
    function SetCoefficients(int256[] _coeffsArray) public {  
        require (msg.sender == service_provider);
        coefficients.length = _coeffsArray.length;
        coefficients = _coeffsArray;
    }
    
    // function to get the logistic regression coefficients
    function GetCoefficients() public returns(int256[] memory _outArray) {  
        require (client_payment_ok == true || msg.sender == service_provider);
        _outArray = coefficients;
    }

    
    // function to transfer amount from client to service_provider
    function TransferFunds() public payable {
        require (msg.sender == client && msg.value == 0.01 ether);
        service_provider.transfer(msg.value); 
        client_payment_ok = true;
    }
     
}
    
    
